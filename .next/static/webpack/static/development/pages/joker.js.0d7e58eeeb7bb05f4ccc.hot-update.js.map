{"version":3,"file":"static/webpack/static\\development\\pages\\joker.js.0d7e58eeeb7bb05f4ccc.hot-update.js","sources":["webpack:///./pages/joker.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport Link from 'next/link';\r\nimport Head from 'next/head';\r\n\r\nimport withAnalytics from 'root/hocs/withAnalytics';\r\n\r\nconst Title = styled.h1`\r\n    color: #069;\r\n    font-size: 40px;\r\n`;\r\n\r\nconst Content = styled.div`\r\n    border: 2px solid #666;\r\n    text-align: center;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    margin-top: 80px;\r\n    max-width: 700px;\r\n    padding: 25px;\r\n\r\n    p {\r\n        font-size: 18px;\r\n        font-family: monospace;\r\n        color: #57595c;\r\n    }\r\n`;\r\n\r\nclass Joker extends Component {\r\n\r\n    static async getInitialProps(){\r\n        const [value, data] = await Promise.all([  \r\n            axios.get(`https://api.chucknorris.io/jokes/random`),\r\n            axios.get(`https://api.chucknorris.io/jokes/categories`),\r\n        ]);\r\n    \r\n       return { joker: value, categories: data };\r\n    }\r\n  \r\n    constructor(props) {\r\n        super(props);\r\n        this.random = this.random.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.state = {value: '', respRandon: ''};\r\n      }\r\n\r\n      handleChange(event) {\r\n    \r\n        this.setState({value: event.target.value});\r\n        this.random(this.state.value);\r\n      }\r\n\r\n    async random(categoria) {\r\n            const response = await axios.get(\r\n                `https://api.chucknorris.io/jokes/random?category=${categoria}`\r\n            );\r\n            return this.setState({ respRandon : response.data.value});   \r\n    } \r\n\r\n    render(){\r\n        const { joker, categories } = this.props;\r\n        const respRandon = this.state.respRandon;\r\n        let paragrafo;\r\n\r\n        if(respRandon){\r\n            paragrafo = <p>{this.state.respRandon}</p>\r\n        }else{\r\n            paragrafo = <p>{joker.data.value}</p>\r\n        }\r\n\r\n        return(\r\n            <Content>\r\n                <Head>\r\n                    <title>O Mito</title>\r\n                </Head>\r\n                <Link href=\"/\">\r\n                    <a>Voltar</a>\r\n                </Link>\r\n                <img src=\"/static/chuck.png\" width=\"150\"/>\r\n                <form>\r\n                    <select value={this.state.value} onChange={this.handleChange}>     \r\n                        {categories.data.map( category => \r\n                            (\r\n                                <option value={category} key={category}>\r\n                                    {category}  \r\n                                </option>\r\n                            )\r\n                        )}   \r\n                    </select>\r\n                </form>\r\n                \r\n                <Title> Fatos sobre Chuck Norris</Title>\r\n                \r\n                <h2>{this.state.value}</h2>\r\n                {paragrafo}\r\n            </Content>\r\n        )};\r\n    }\r\n\r\n\r\nexport default withAnalytics()(Joker);"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AACA;AAeA;;;;;;;;;;;;;;;;;;AAGA;AACA;;;;AADA;AAAA;AAKA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAJA;AAKA;AACA;;;AACA;AAEA;AAAA;AAAA;AACA;AACA;;;;;;AAEA;;;;;;;AACA;AACA;;AADA;AAGA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAAA;AAGA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAFA;AAeA;;;;AApEA;AACA;AAuEA;;;;A","sourceRoot":""}