{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport Link from 'next/link';\nimport Head from 'next/head';\nimport withAnalytics from \"../src/hocs/withAnalytics\";\nvar Title = styled.h1.withConfig({\n  displayName: \"joker__Title\",\n  componentId: \"ilkf1e-0\"\n})([\"color:#069;font-size:40px;\"]);\nvar Content = styled.div.withConfig({\n  displayName: \"joker__Content\",\n  componentId: \"ilkf1e-1\"\n})([\"border:2px solid #666;text-align:center;margin-left:auto;margin-right:auto;margin-top:80px;max-width:700px;padding:25px;p{font-size:18px;font-family:monospace;color:#57595c;}\"]);\n\nvar Joker =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Joker, _Component);\n\n  _createClass(Joker, null, [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _ref, _ref2, value, data;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _Promise.all([axios.get(\"https://api.chucknorris.io/jokes/random\"), axios.get(\"https://api.chucknorris.io/jokes/categories\")]);\n\n              case 2:\n                _ref = _context.sent;\n                _ref2 = _slicedToArray(_ref, 2);\n                value = _ref2[0];\n                data = _ref2[1];\n                return _context.abrupt(\"return\", {\n                  joker: value,\n                  categories: data\n                });\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps() {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  function Joker(props) {\n    var _this;\n\n    _classCallCheck(this, Joker);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Joker).call(this, props));\n    _this.random = _this.random.bind(_assertThisInitialized(_this));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.state = {\n      value: '',\n      respRandon: ''\n    };\n    return _this;\n  }\n\n  _createClass(Joker, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        value: event.target.value\n      });\n      this.random(this.state.value);\n    }\n  }, {\n    key: \"random\",\n    value: function () {\n      var _random = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(categoria) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return axios.get(\"https://api.chucknorris.io/jokes/random?category=\".concat(categoria));\n\n              case 2:\n                response = _context2.sent;\n                return _context2.abrupt(\"return\", this.setState({\n                  respRandon: response.data.value\n                }));\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function random(_x) {\n        return _random.apply(this, arguments);\n      }\n\n      return random;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          joker = _this$props.joker,\n          categories = _this$props.categories;\n      var respRandon = this.state.respRandon;\n      var paragrafo;\n\n      if (respRandon) {\n        paragrafo = __jsx(\"p\", null, this.state.respRandon);\n      } else {\n        paragrafo = __jsx(\"p\", null, joker.data.value);\n      }\n\n      return __jsx(Content, null, __jsx(Head, null, __jsx(\"title\", null, \"O Mito\")), __jsx(\"img\", {\n        src: \"/static/chuck.png\",\n        width: \"150\"\n      }), __jsx(\"form\", null, __jsx(\"select\", {\n        value: this.state.value,\n        onChange: this.handleChange\n      }, categories.data.map(function (category) {\n        return __jsx(\"option\", {\n          value: category,\n          key: category\n        }, category);\n      }))), __jsx(Title, null, \" Fatos sobre Chuck Norris\"), __jsx(\"h2\", null, this.state.value), paragrafo, __jsx(Link, {\n        href: \"/\"\n      }, __jsx(\"a\", null, \"Voltar\")));\n    }\n  }]);\n\n  return Joker;\n}(Component);\n\nexport default withAnalytics()(Joker);","map":{"version":3,"sources":["C:/Users/felipe.xavier/Desktop/PEDROSO/nextjs/pages/joker.js"],"names":["React","Component","axios","styled","Link","Head","withAnalytics","Title","h1","Content","div","Joker","all","get","value","data","joker","categories","props","random","bind","handleChange","state","respRandon","event","setState","target","categoria","response","paragrafo","map","category"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,aAAP,MAA0B,2BAA1B;AAEA,IAAMC,KAAK,GAAGJ,MAAM,CAACK,EAAV;AAAA;AAAA;AAAA,kCAAX;AAKA,IAAMC,OAAO,GAAGN,MAAM,CAACO,GAAV;AAAA;AAAA;AAAA,sLAAb;;IAgBMC,K;;;;;;;;;;;;;;;;;;uBAG8B,SAAQC,GAAR,CAAY,CACpCV,KAAK,CAACW,GAAN,2CADoC,EAEpCX,KAAK,CAACW,GAAN,+CAFoC,CAAZ,C;;;;;AAArBC,gBAAAA,K;AAAOC,gBAAAA,I;iDAKR;AAAEC,kBAAAA,KAAK,EAAEF,KAAT;AAAgBG,kBAAAA,UAAU,EAAEF;AAA5B,iB;;;;;;;;;;;;;;;;;;AAGV,iBAAYG,KAAZ,EAAmB;AAAA;;AAAA;;AACf,+EAAMA,KAAN;AACA,UAAKC,MAAL,GAAc,MAAKA,MAAL,CAAYC,IAAZ,+BAAd;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBD,IAAlB,+BAApB;AACA,UAAKE,KAAL,GAAa;AAACR,MAAAA,KAAK,EAAE,EAAR;AAAYS,MAAAA,UAAU,EAAE;AAAxB,KAAb;AAJe;AAKhB;;;;iCAEYC,K,EAAO;AAElB,WAAKC,QAAL,CAAc;AAACX,QAAAA,KAAK,EAAEU,KAAK,CAACE,MAAN,CAAaZ;AAArB,OAAd;AACA,WAAKK,MAAL,CAAY,KAAKG,KAAL,CAAWR,KAAvB;AACD;;;;;;iDAEUa,S;;;;;;;uBACkBzB,KAAK,CAACW,GAAN,4DACiCc,SADjC,E;;;AAAjBC,gBAAAA,Q;kDAGC,KAAKH,QAAL,CAAc;AAAEF,kBAAAA,UAAU,EAAGK,QAAQ,CAACb,IAAT,CAAcD;AAA7B,iBAAd,C;;;;;;;;;;;;;;;;;;6BAGP;AAAA,wBAC0B,KAAKI,KAD/B;AAAA,UACIF,KADJ,eACIA,KADJ;AAAA,UACWC,UADX,eACWA,UADX;AAEJ,UAAMM,UAAU,GAAG,KAAKD,KAAL,CAAWC,UAA9B;AACA,UAAIM,SAAJ;;AAEA,UAAGN,UAAH,EAAc;AACVM,QAAAA,SAAS,GAAG,iBAAI,KAAKP,KAAL,CAAWC,UAAf,CAAZ;AACH,OAFD,MAEK;AACDM,QAAAA,SAAS,GAAG,iBAAIb,KAAK,CAACD,IAAN,CAAWD,KAAf,CAAZ;AACH;;AAED,aACI,MAAC,OAAD,QACI,MAAC,IAAD,QACI,8BADJ,CADJ,EAKI;AAAK,QAAA,GAAG,EAAC,mBAAT;AAA6B,QAAA,KAAK,EAAC;AAAnC,QALJ,EAMI,oBACI;AAAQ,QAAA,KAAK,EAAE,KAAKQ,KAAL,CAAWR,KAA1B;AAAiC,QAAA,QAAQ,EAAE,KAAKO;AAAhD,SACKJ,UAAU,CAACF,IAAX,CAAgBe,GAAhB,CAAqB,UAAAC,QAAQ;AAAA,eAEtB;AAAQ,UAAA,KAAK,EAAEA,QAAf;AAAyB,UAAA,GAAG,EAAEA;AAA9B,WACKA,QADL,CAFsB;AAAA,OAA7B,CADL,CADJ,CANJ,EAkBI,MAAC,KAAD,oCAlBJ,EAoBI,kBAAK,KAAKT,KAAL,CAAWR,KAAhB,CApBJ,EAqBKe,SArBL,EAsBI,MAAC,IAAD;AAAM,QAAA,IAAI,EAAC;AAAX,SACI,0BADJ,CAtBJ,CADJ;AA2BE;;;;EArEU5B,S;;AAyEpB,eAAeK,aAAa,GAAGK,KAAH,CAA5B","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport Link from 'next/link';\r\nimport Head from 'next/head';\r\n\r\nimport withAnalytics from 'root/hocs/withAnalytics';\r\n\r\nconst Title = styled.h1`\r\n    color: #069;\r\n    font-size: 40px;\r\n`;\r\n\r\nconst Content = styled.div`\r\n    border: 2px solid #666;\r\n    text-align: center;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    margin-top: 80px;\r\n    max-width: 700px;\r\n    padding: 25px;\r\n\r\n    p {\r\n        font-size: 18px;\r\n        font-family: monospace;\r\n        color: #57595c;\r\n    }\r\n`;\r\n\r\nclass Joker extends Component {\r\n\r\n    static async getInitialProps(){\r\n        const [value, data] = await Promise.all([  \r\n            axios.get(`https://api.chucknorris.io/jokes/random`),\r\n            axios.get(`https://api.chucknorris.io/jokes/categories`),\r\n        ]);\r\n    \r\n       return { joker: value, categories: data };\r\n    }\r\n  \r\n    constructor(props) {\r\n        super(props);\r\n        this.random = this.random.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.state = {value: '', respRandon: ''};\r\n      }\r\n\r\n      handleChange(event) {\r\n    \r\n        this.setState({value: event.target.value});\r\n        this.random(this.state.value);\r\n      }\r\n\r\n    async random(categoria) {\r\n            const response = await axios.get(\r\n                `https://api.chucknorris.io/jokes/random?category=${categoria}`\r\n            );\r\n            return this.setState({ respRandon : response.data.value});   \r\n    } \r\n\r\n    render(){\r\n        const { joker, categories } = this.props;\r\n        const respRandon = this.state.respRandon;\r\n        let paragrafo;\r\n\r\n        if(respRandon){\r\n            paragrafo = <p>{this.state.respRandon}</p>\r\n        }else{\r\n            paragrafo = <p>{joker.data.value}</p>\r\n        }\r\n\r\n        return(\r\n            <Content>\r\n                <Head>\r\n                    <title>O Mito</title>\r\n                </Head>\r\n                \r\n                <img src=\"/static/chuck.png\" width=\"150\"/>\r\n                <form>\r\n                    <select value={this.state.value} onChange={this.handleChange}>     \r\n                        {categories.data.map( category => \r\n                            (\r\n                                <option value={category} key={category}>\r\n                                    {category}  \r\n                                </option>\r\n                            )\r\n                        )}   \r\n                    </select>\r\n                </form>\r\n                \r\n                <Title> Fatos sobre Chuck Norris</Title>\r\n                \r\n                <h2>{this.state.value}</h2>\r\n                {paragrafo}\r\n                <Link href=\"/\">\r\n                    <a>Voltar</a>\r\n                </Link>\r\n            </Content>\r\n        )};\r\n    }\r\n\r\n\r\nexport default withAnalytics()(Joker);"]},"metadata":{},"sourceType":"module"}